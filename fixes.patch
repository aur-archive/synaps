diff -r 1c275a39711f arithm/include/BigUnsigned.h
--- a/arithm/include/BigUnsigned.h	Mon Mar 24 05:36:49 2008 -0400
+++ b/arithm/include/BigUnsigned.h	Mon Mar 24 05:40:51 2008 -0400
@@ -26,12 +26,12 @@ struct BigUnsigned
   
   BigUnsigned& operator=( unsigned n ) 
   { 
-     new (this) BigUnsigned(n); 
+     new (this) BigUnsigned(n); return *this;
   };
   
   BigUnsigned& operator=( const BigUnsigned& b ) 
   { 
-     new (this) BigUnsigned(b); 
+     new (this) BigUnsigned(b); return *this;
   };
   
   inline bool operator<( const BigUnsigned<N>& bi )
diff -r 1c275a39711f arithm/include/Interval.h
--- a/arithm/include/Interval.h	Mon Mar 24 05:36:49 2008 -0400
+++ b/arithm/include/Interval.h	Mon Mar 24 05:40:51 2008 -0400
@@ -54,6 +54,7 @@ struct Interval : numerics::interval_bas
     {
       m = i.m;
       M = i.M;
+      return *this;
     };
     
     template<class X>
diff -r 1c275a39711f base/include/Seq.h
--- a/base/include/Seq.h	Mon Mar 24 05:36:49 2008 -0400
+++ b/base/include/Seq.h	Mon Mar 24 05:40:51 2008 -0400
@@ -70,10 +70,10 @@ struct Seq {
   iterator               end()          {return rep().end();}
   const_iterator         begin()  const {return rep().begin();}
   const_iterator         end()    const {return rep().end();}
-  reverse_iterator       rbegin()       {return rep.rbegin();}
-  reverse_iterator       rend()         {return rep.rend();}
-  const_reverse_iterator rbegin() const {return rep.rbegin();}
-  const_reverse_iterator rend  () const {return rep.rbegin();}
+  reverse_iterator       rbegin()       {return rep().rbegin();}
+  reverse_iterator       rend()         {return rep().rend();}
+  const_reverse_iterator rbegin() const {return rep().rbegin();}
+  const_reverse_iterator rend  () const {return rep().rbegin();}
 
   // Assignement
   self_t & operator=(const self_t & V){data=V.data; return *this;}
